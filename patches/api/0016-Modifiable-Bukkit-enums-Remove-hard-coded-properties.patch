From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Mon, 10 Jul 2023 22:05:08 +0200
Subject: [PATCH] Modifiable Bukkit enums - Remove hard-coded properties -
 Material - Key

Modifies the Material property getKey() so that it is no longer computed in Material, but in UnsafeValues.

The property values are cached after being computed, for performant access.

License: GPL-3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
Fiddle - https://fiddlemc.org

diff --git a/src/main/java/org/bukkit/Material.java b/src/main/java/org/bukkit/Material.java
index 3957ef6ca3dfe00e3f19e6ae1dc75717cf9dac20..78530b101e30775d8f091e895537fc32249753c3 100644
--- a/src/main/java/org/bukkit/Material.java
+++ b/src/main/java/org/bukkit/Material.java
@@ -4,7 +4,6 @@ import com.google.common.base.Preconditions;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Multimap;
 import java.lang.reflect.Constructor;
-import java.util.Locale;
 import java.util.Map;
 import java.util.function.Consumer;
 import org.bukkit.attribute.Attribute;
@@ -113,6 +112,7 @@ import org.bukkit.inventory.CreativeCategory;
 import org.bukkit.inventory.EquipmentSlot;
 import org.bukkit.material.MaterialData;
 import org.fiddlemc.fiddle.material.MaterialDefaultImplementations;
+import org.fiddlemc.fiddle.material.MaterialNameAndKeyConversion;
 import org.jetbrains.annotations.NotNull;
 import org.jetbrains.annotations.Nullable;
 
@@ -4394,7 +4394,6 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     private final short durabilityHardcoded;
     public final Class<?> data;
     private final boolean legacy;
-    private final NamespacedKey key;
 
     private Material(final int id) {
         this(id, 64);
@@ -4422,7 +4421,6 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
         this.maxStackHardcoded = stack;
         this.data = data;
         this.legacy = this.name().startsWith(LEGACY_PREFIX);
-        this.key = NamespacedKey.minecraft(this.name().toLowerCase(Locale.ROOT));
         // try to cache the constructor for this material
         try {
             if (MaterialData.class.isAssignableFrom(data)) {
@@ -4521,8 +4519,7 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     @NotNull
     @Override
     public NamespacedKey getKey() {
-        Preconditions.checkArgument(!legacy, "Cannot get key of Legacy Material");
-        return key;
+        return MaterialNameAndKeyConversion.getKey(this); // Fiddle - modifiable Bukkit enums - Material - remove hard-coded properties - key
     }
 
     /**
diff --git a/src/main/java/org/fiddlemc/fiddle/material/MaterialDefaultImplementations.java b/src/main/java/org/fiddlemc/fiddle/material/MaterialDefaultImplementations.java
index 6157337d6da3ce508b9a4a989c4a138a9bf9961b..f39d520dfc368733079e0e23193f0f199eca2c14 100644
--- a/src/main/java/org/fiddlemc/fiddle/material/MaterialDefaultImplementations.java
+++ b/src/main/java/org/fiddlemc/fiddle/material/MaterialDefaultImplementations.java
@@ -4,6 +4,10 @@ package org.fiddlemc.fiddle.material;
 
 import com.google.common.base.Preconditions;
 import org.bukkit.Material;
+import org.bukkit.NamespacedKey;
+import org.jetbrains.annotations.NotNull;
+
+import java.util.Locale;
 
 /**
  * This class provides a number of default implementations for {@link Material} that
diff --git a/src/main/java/org/fiddlemc/fiddle/material/MaterialNameAndKeyConversion.java b/src/main/java/org/fiddlemc/fiddle/material/MaterialNameAndKeyConversion.java
index db0b953c6aacd29817dcb0bd5069346ac7116b80..b600f06d62ea4b045590d72626d8029be82e89f2 100644
--- a/src/main/java/org/fiddlemc/fiddle/material/MaterialNameAndKeyConversion.java
+++ b/src/main/java/org/fiddlemc/fiddle/material/MaterialNameAndKeyConversion.java
@@ -2,7 +2,12 @@
 
 package org.fiddlemc.fiddle.material;
 
+import com.google.common.base.Preconditions;
 import org.bukkit.Material;
+import org.bukkit.NamespacedKey;
+import org.jetbrains.annotations.NotNull;
+
+import java.util.Locale;
 
 /**
  * This class provides a number of implementations for the conversion of names and keys
@@ -17,4 +22,20 @@ public final class MaterialNameAndKeyConversion {
         throw new RuntimeException();
     }
 
+    // Fiddle start - modifiable Bukkit enums - Material - remove hard-coded properties - key
+    private static final CachedMaterialProperty<NamespacedKey> keyCache = new CachedMaterialProperty<>(
+        NamespacedKey[]::new,
+        // Based on the original org.bukkit.Material constructor
+        material -> NamespacedKey.minecraft(material.name().toLowerCase(Locale.ROOT))
+    );
+
+    /**
+     * @throws IllegalArgumentException If the given {@code material} is {@linkplain Material#isLegacy() legacy}.
+     */
+    public static @NotNull NamespacedKey getKey(Material material) {
+        Preconditions.checkArgument(!material.isLegacy(), "Cannot get key of Legacy Material");
+        return keyCache.get(material);
+    }
+    // Fiddle end - modifiable Bukkit enums - Material - remove hard-coded properties - key
+
 }
