From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Mon, 10 Jul 2023 22:05:08 +0200
Subject: [PATCH] Modifiable Bukkit enums - Remove hard-coded properties -
 Material - Key

Modifies the `Material` property `getKey()` so that it is no longer computed in `Material`, but based on a function defined and implemented in `MaterialNameAndKeyConversion`.

The property values are cached after being computed, for performant access.

License: GPL-3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
Fiddle - https://fiddlemc.org

diff --git a/src/main/java/org/bukkit/Material.java b/src/main/java/org/bukkit/Material.java
index f67bf29828e1d61abaf55ef9a310a2fadcf8fbfc..b3e1b2565e71cc40342541cf36348bd68530f44c 100644
--- a/src/main/java/org/bukkit/Material.java
+++ b/src/main/java/org/bukkit/Material.java
@@ -4396,7 +4396,6 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     private final short durabilityHardcoded;
     public final Class<?> data;
     private final boolean legacy;
-    private final NamespacedKey key;
 
     private Material(final int id) {
         this(id, 64);
@@ -4424,7 +4423,6 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
         this.maxStackHardcoded = stack;
         this.data = data;
         this.legacy = this.name().startsWith(LEGACY_PREFIX);
-        this.key = NamespacedKey.minecraft(this.name().toLowerCase(Locale.ROOT));
         // try to cache the constructor for this material
         try {
             if (MaterialData.class.isAssignableFrom(data)) {
@@ -4523,8 +4521,7 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     @NotNull
     @Override
     public NamespacedKey getKey() {
-        Preconditions.checkArgument(!legacy, "Cannot get key of Legacy Material");
-        return key;
+        return org.fiddlemc.fiddle.material.MaterialNameAndKeyConversion.getKey(this); // Fiddle - modifiable Bukkit enums - Material - remove hard-coded properties - key
     }
 
     /**
diff --git a/src/main/java/org/fiddlemc/fiddle/material/MaterialNameAndKeyConversion.java b/src/main/java/org/fiddlemc/fiddle/material/MaterialNameAndKeyConversion.java
index db0b953c6aacd29817dcb0bd5069346ac7116b80..b600f06d62ea4b045590d72626d8029be82e89f2 100644
--- a/src/main/java/org/fiddlemc/fiddle/material/MaterialNameAndKeyConversion.java
+++ b/src/main/java/org/fiddlemc/fiddle/material/MaterialNameAndKeyConversion.java
@@ -2,7 +2,12 @@
 
 package org.fiddlemc.fiddle.material;
 
+import com.google.common.base.Preconditions;
 import org.bukkit.Material;
+import org.bukkit.NamespacedKey;
+import org.jetbrains.annotations.NotNull;
+
+import java.util.Locale;
 
 /**
  * This class provides a number of implementations for the conversion of names and keys
@@ -17,4 +22,20 @@ public final class MaterialNameAndKeyConversion {
         throw new RuntimeException();
     }
 
+    // Fiddle start - modifiable Bukkit enums - Material - remove hard-coded properties - key
+    private static final CachedMaterialProperty<NamespacedKey> keyCache = new CachedMaterialProperty<>(
+        NamespacedKey[]::new,
+        // Based on the original org.bukkit.Material constructor
+        material -> NamespacedKey.minecraft(material.name().toLowerCase(Locale.ROOT))
+    );
+
+    /**
+     * @throws IllegalArgumentException If the given {@code material} is {@linkplain Material#isLegacy() legacy}.
+     */
+    public static @NotNull NamespacedKey getKey(Material material) {
+        Preconditions.checkArgument(!material.isLegacy(), "Cannot get key of Legacy Material");
+        return keyCache.get(material);
+    }
+    // Fiddle end - modifiable Bukkit enums - Material - remove hard-coded properties - key
+
 }
diff --git a/src/test/java/org/bukkit/MaterialTest.java b/src/test/java/org/bukkit/MaterialTest.java
index 818aa21d3b6d59a65d91ab69d96e91d7eabaed08..3e771faab580e11625d264e70d6c5ca50dcada3d 100644
--- a/src/test/java/org/bukkit/MaterialTest.java
+++ b/src/test/java/org/bukkit/MaterialTest.java
@@ -53,6 +53,18 @@ public class MaterialTest {
         }
     }
 
+    // Fiddle start - modifiable Bukkit enums - Material - remove hard-coded properties - key
+    @Test
+    public void matchMaterialByKeyPath() {
+        for (Material material : Material.values()) {
+            if (material.isLegacy()) {
+                continue;
+            }
+            assertThat(Material.matchMaterial(material.getKey().getKey()), is(material));
+        }
+    }
+    // Fiddle end - modifiable Bukkit enums - Material - remove hard-coded properties - key
+
     @Test
     public void matchMaterialByWrongNamespace() {
         for (Material material : Material.values()) {
