From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Wed, 12 Jul 2023 14:34:23 +0200
Subject: [PATCH] Modifiable Bukkit enums - Remove hard-coded properties -
 Material - Data class

Adds a `computeData()` method to `Material`.

This method allows to obtain the desired value of the `data` field without relying on it being set in the `Material` constructor.

License: GPL-3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
Fiddle - https://fiddlemc.org

diff --git a/src/main/java/org/bukkit/Material.java b/src/main/java/org/bukkit/Material.java
index a8926387fc178cffec1bea7d2c3b9c83a325d186..f9c086a5c366ff79cc93156bc842903375267b77 100644
--- a/src/main/java/org/bukkit/Material.java
+++ b/src/main/java/org/bukkit/Material.java
@@ -4868,6 +4868,18 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
         return org.fiddlemc.fiddle.material.MaterialDefaultImplementations.getNewMaterialDataInstance(this, raw); // Fiddle - modifiable Bukkit enums - Material - remove hard-coded properties - cached constructor
     }
 
+    // Fiddle start - modifiable Bukkit enums - Material - remove hard-coded properties - data
+    /**
+     * @return The computed value of {@link #data} that this instance should have.
+     * @deprecated Do not use: for internal use only.
+     */
+    @Deprecated(forRemoval = true)
+    @NotNull
+    public Class<?> computeData() {
+        return Bukkit.getUnsafe().computeData(this);
+    }
+    // Fiddle end - modifiable Bukkit enums - Material - remove hard-coded properties - data
+
     /**
      * Checks if this Material is a placable block
      *
diff --git a/src/main/java/org/bukkit/UnsafeValues.java b/src/main/java/org/bukkit/UnsafeValues.java
index 0f4baeb39f0c228fff41ddb9633238a616c4741c..2d774bedb78f70536ad68f51b04087599814f673 100644
--- a/src/main/java/org/bukkit/UnsafeValues.java
+++ b/src/main/java/org/bukkit/UnsafeValues.java
@@ -296,6 +296,8 @@ public interface UnsafeValues {
 
     short getMaxDurability(Material material); // Fiddle - modifiable Bukkit enums - Material - remove hard-coded properties - durability
 
+    @NotNull Class<?> computeData(Material material); // Fiddle - modifiable Bukkit enums - Material - remove hard-coded properties - data
+
     // Fiddle start - modifiable Bukkit enums - Material - remove hard-coded properties - most properties
     boolean isBlock(Material material);
 
diff --git a/src/main/java/org/fiddlemc/fiddle/material/MaterialDefaultImplementations.java b/src/main/java/org/fiddlemc/fiddle/material/MaterialDefaultImplementations.java
index a7d7e49ffc6768e85f98df1d44b7e437d9a01fff..3ba8ba2a102bf2bdc24469aeb46a8b50394164e0 100644
--- a/src/main/java/org/fiddlemc/fiddle/material/MaterialDefaultImplementations.java
+++ b/src/main/java/org/fiddlemc/fiddle/material/MaterialDefaultImplementations.java
@@ -128,6 +128,73 @@ public final class MaterialDefaultImplementations {
     }
     // Fiddle end - modifiable Bukkit enums - Material - remove hard-coded properties - durability
 
+    // Fiddle start - modifiable Bukkit enums - Material - remove hard-coded properties - data
+    /**
+     * @throws IllegalArgumentException If the given {@code material} is not {@linkplain Material#isLegacy() legacy}.
+     */
+    public static @NotNull Class<?> computeDataLegacy(Material material) {
+        Preconditions.checkArgument(material.isLegacy(), "Cannot call computeDataLegacy(Material) for Modern Material");
+        // Based on the values of the data parameter in the original org.bukkit.Material constructor
+        return switch (material) {
+            case LEGACY_WOOD, LEGACY_WOOD_DOUBLE_STEP -> org.bukkit.material.Wood.class;
+            case LEGACY_SAPLING -> org.bukkit.material.Sapling.class;
+            case LEGACY_LOG, LEGACY_LOG_2 -> org.bukkit.material.Tree.class;
+            case LEGACY_LEAVES, LEGACY_LEAVES_2 -> org.bukkit.material.Leaves.class;
+            case LEGACY_DISPENSER, LEGACY_DROPPER -> org.bukkit.material.Dispenser.class;
+            case LEGACY_SANDSTONE -> org.bukkit.material.Sandstone.class;
+            case LEGACY_BED_BLOCK -> org.bukkit.material.Bed.class;
+            case LEGACY_POWERED_RAIL, LEGACY_ACTIVATOR_RAIL -> org.bukkit.material.PoweredRail.class;
+            case LEGACY_DETECTOR_RAIL -> org.bukkit.material.DetectorRail.class;
+            case LEGACY_PISTON_STICKY_BASE, LEGACY_PISTON_BASE -> org.bukkit.material.PistonBaseMaterial.class;
+            case LEGACY_LONG_GRASS -> org.bukkit.material.LongGrass.class;
+            case LEGACY_PISTON_EXTENSION -> org.bukkit.material.PistonExtensionMaterial.class;
+            case LEGACY_WOOL -> org.bukkit.material.Wool.class;
+            case LEGACY_DOUBLE_STEP, LEGACY_STEP -> org.bukkit.material.Step.class;
+            case LEGACY_TORCH -> org.bukkit.material.Torch.class;
+            case LEGACY_WOOD_STAIRS, LEGACY_COBBLESTONE_STAIRS, LEGACY_BRICK_STAIRS, LEGACY_SMOOTH_STAIRS, LEGACY_NETHER_BRICK_STAIRS, LEGACY_SANDSTONE_STAIRS, LEGACY_SPRUCE_WOOD_STAIRS, LEGACY_BIRCH_WOOD_STAIRS, LEGACY_JUNGLE_WOOD_STAIRS, LEGACY_QUARTZ_STAIRS, LEGACY_ACACIA_STAIRS, LEGACY_DARK_OAK_STAIRS, LEGACY_RED_SANDSTONE_STAIRS, LEGACY_PURPUR_STAIRS -> org.bukkit.material.Stairs.class;
+            case LEGACY_CHEST, LEGACY_TRAPPED_CHEST -> org.bukkit.material.Chest.class;
+            case LEGACY_REDSTONE_WIRE -> org.bukkit.material.RedstoneWire.class;
+            case LEGACY_CROPS, LEGACY_CARROT, LEGACY_POTATO, LEGACY_BEETROOT_BLOCK -> org.bukkit.material.Crops.class;
+            case LEGACY_FURNACE, LEGACY_BURNING_FURNACE -> org.bukkit.material.Furnace.class;
+            case LEGACY_SIGN_POST, LEGACY_WALL_SIGN -> org.bukkit.material.Sign.class;
+            case LEGACY_WOODEN_DOOR, LEGACY_IRON_DOOR_BLOCK, LEGACY_SPRUCE_DOOR, LEGACY_BIRCH_DOOR, LEGACY_JUNGLE_DOOR, LEGACY_ACACIA_DOOR, LEGACY_DARK_OAK_DOOR -> org.bukkit.material.Door.class;
+            case LEGACY_LADDER -> org.bukkit.material.Ladder.class;
+            case LEGACY_RAILS -> org.bukkit.material.Rails.class;
+            case LEGACY_LEVER -> org.bukkit.material.Lever.class;
+            case LEGACY_STONE_PLATE, LEGACY_WOOD_PLATE -> org.bukkit.material.PressurePlate.class;
+            case LEGACY_REDSTONE_TORCH_OFF, LEGACY_REDSTONE_TORCH_ON -> org.bukkit.material.RedstoneTorch.class;
+            case LEGACY_STONE_BUTTON, LEGACY_WOOD_BUTTON -> org.bukkit.material.Button.class;
+            case LEGACY_PUMPKIN, LEGACY_JACK_O_LANTERN -> org.bukkit.material.Pumpkin.class;
+            case LEGACY_CAKE_BLOCK -> org.bukkit.material.Cake.class;
+            case LEGACY_DIODE_BLOCK_OFF, LEGACY_DIODE_BLOCK_ON -> org.bukkit.material.Diode.class;
+            case LEGACY_TRAP_DOOR, LEGACY_IRON_TRAPDOOR -> org.bukkit.material.TrapDoor.class;
+            case LEGACY_MONSTER_EGGS -> org.bukkit.material.MonsterEggs.class;
+            case LEGACY_SMOOTH_BRICK -> org.bukkit.material.SmoothBrick.class;
+            case LEGACY_HUGE_MUSHROOM_1, LEGACY_HUGE_MUSHROOM_2 -> org.bukkit.material.Mushroom.class;
+            case LEGACY_VINE -> org.bukkit.material.Vine.class;
+            case LEGACY_FENCE_GATE, LEGACY_SPRUCE_FENCE_GATE, LEGACY_BIRCH_FENCE_GATE, LEGACY_JUNGLE_FENCE_GATE, LEGACY_DARK_OAK_FENCE_GATE, LEGACY_ACACIA_FENCE_GATE -> org.bukkit.material.Gate.class;
+            case LEGACY_NETHER_WARTS -> org.bukkit.material.NetherWarts.class;
+            case LEGACY_CAULDRON -> org.bukkit.material.Cauldron.class;
+            case LEGACY_WOOD_STEP -> org.bukkit.material.WoodenStep.class;
+            case LEGACY_COCOA -> org.bukkit.material.CocoaPlant.class;
+            case LEGACY_ENDER_CHEST -> org.bukkit.material.EnderChest.class;
+            case LEGACY_TRIPWIRE_HOOK -> org.bukkit.material.TripwireHook.class;
+            case LEGACY_TRIPWIRE -> org.bukkit.material.Tripwire.class;
+            case LEGACY_COMMAND, LEGACY_COMMAND_REPEATING, LEGACY_COMMAND_CHAIN -> org.bukkit.material.Command.class;
+            case LEGACY_FLOWER_POT -> org.bukkit.material.FlowerPot.class;
+            case LEGACY_SKULL -> org.bukkit.material.Skull.class;
+            case LEGACY_REDSTONE_COMPARATOR_OFF, LEGACY_REDSTONE_COMPARATOR_ON -> org.bukkit.material.Comparator.class;
+            case LEGACY_HOPPER -> org.bukkit.material.Hopper.class;
+            case LEGACY_STANDING_BANNER, LEGACY_WALL_BANNER -> org.bukkit.material.Banner.class;
+            case LEGACY_OBSERVER -> org.bukkit.material.Observer.class;
+            case LEGACY_COAL -> org.bukkit.material.Coal.class;
+            case LEGACY_INK_SACK -> org.bukkit.material.Dye.class;
+            case LEGACY_MONSTER_EGG -> org.bukkit.material.SpawnEgg.class;
+            default -> org.bukkit.material.MaterialData.class;
+        };
+    }
+    // Fiddle end - modifiable Bukkit enums - Material - remove hard-coded properties - data
+
     // Fiddle start - modifiable Bukkit enums - Material - remove hard-coded properties - cached constructor
     private static @NotNull Constructor<? extends MaterialData> getMaterialDataConstructor(Material material) {
         Preconditions.checkArgument(material.isLegacy(), "Cannot get data class constructor of Modern Material"); // Fiddle - modifiable Bukkit enums - Material - remove hard-coded properties - is legacy
