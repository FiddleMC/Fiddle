From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Mon, 10 Jul 2023 22:05:08 +0200
Subject: [PATCH] Modifiable Bukkit enums - Remove hard-coded properties -
 Material - Key

Modifies the `Material` property `getKey()` so that it is no longer computed in `Material`, but based on a function defined and implemented in `MaterialNameAndKeyConversion`.

The property values are cached after being computed, for performant access.

License: GPL-3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
Fiddle - https://fiddlemc.org

diff --git a/src/main/java/org/bukkit/Material.java b/src/main/java/org/bukkit/Material.java
index cefb5d57a90958a42c80e3a33e238b8fa6f77aab..1c9f5c6e50faccb33cb896ee5b38ca67985d0e4a 100644
--- a/src/main/java/org/bukkit/Material.java
+++ b/src/main/java/org/bukkit/Material.java
@@ -4642,7 +4642,6 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     private final short durabilityHardcoded;
     public final Class<?> data;
     private final boolean legacy;
-    private final NamespacedKey key;
 
     private Material(final int id) {
         this(id, 64);
@@ -4670,7 +4669,6 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
         this.maxStackHardcoded = stack;
         this.data = data;
         this.legacy = this.name().startsWith(LEGACY_PREFIX);
-        this.key = NamespacedKey.minecraft(this.name().toLowerCase(Locale.ROOT));
         // try to cache the constructor for this material
         try {
             if (MaterialData.class.isAssignableFrom(data)) {
@@ -4769,8 +4767,7 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     @NotNull
     @Override
     public NamespacedKey getKey() {
-        Preconditions.checkArgument(!legacy, "Cannot get key of Legacy Material");
-        return key;
+        return org.fiddlemc.fiddle.material.MaterialNameAndKeyConversion.getKey(this); // Fiddle - modifiable Bukkit enums - Material - remove hard-coded properties - key
     }
 
     /**
diff --git a/src/main/java/org/fiddlemc/fiddle/material/MaterialNameAndKeyConversion.java b/src/main/java/org/fiddlemc/fiddle/material/MaterialNameAndKeyConversion.java
index 472e6f94da1726e4fde1eda4035dd91a50453f7d..6573b10a9210a1598804a3da60542b10be993d67 100644
--- a/src/main/java/org/fiddlemc/fiddle/material/MaterialNameAndKeyConversion.java
+++ b/src/main/java/org/fiddlemc/fiddle/material/MaterialNameAndKeyConversion.java
@@ -21,4 +21,20 @@ public final class MaterialNameAndKeyConversion {
         throw new RuntimeException();
     }
 
+    // Fiddle start - modifiable Bukkit enums - Material - remove hard-coded properties - key
+    private static final CachedMaterialProperty<org.bukkit.NamespacedKey> keyCache = new CachedMaterialProperty<>(
+        org.bukkit.NamespacedKey[]::new,
+        // Based on the original org.bukkit.Material constructor
+        material -> org.bukkit.NamespacedKey.minecraft(material.name().toLowerCase(java.util.Locale.ROOT))
+    );
+
+    /**
+     * @throws IllegalArgumentException If the given {@code material} is {@linkplain Material#isLegacy() legacy}.
+     */
+    public static org.bukkit.NamespacedKey getKey(Material material) {
+        com.google.common.base.Preconditions.checkArgument(!material.isLegacy(), "Cannot get key of Legacy Material");
+        return keyCache.get(material);
+    }
+    // Fiddle end - modifiable Bukkit enums - Material - remove hard-coded properties - key
+
 }
diff --git a/src/test/java/org/bukkit/MaterialTest.java b/src/test/java/org/bukkit/MaterialTest.java
index 818aa21d3b6d59a65d91ab69d96e91d7eabaed08..3e771faab580e11625d264e70d6c5ca50dcada3d 100644
--- a/src/test/java/org/bukkit/MaterialTest.java
+++ b/src/test/java/org/bukkit/MaterialTest.java
@@ -53,6 +53,18 @@ public class MaterialTest {
         }
     }
 
+    // Fiddle start - modifiable Bukkit enums - Material - remove hard-coded properties - key
+    @Test
+    public void matchMaterialByKeyPath() {
+        for (Material material : Material.values()) {
+            if (material.isLegacy()) {
+                continue;
+            }
+            assertThat(Material.matchMaterial(material.getKey().getKey()), is(material));
+        }
+    }
+    // Fiddle end - modifiable Bukkit enums - Material - remove hard-coded properties - key
+
     @Test
     public void matchMaterialByWrongNamespace() {
         for (Material material : Material.values()) {
