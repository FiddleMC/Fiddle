From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Thu, 13 Jul 2023 08:42:26 +0200
Subject: [PATCH] Modifiable Bukkit enums - Remove hard-coded properties -
 Material - Name and key conversion utility

Adds the `MaterialNameAndKeyConversion` utility class for the conversion of names and keys from and to `Material` instances.
Does not fill it with anything yet, it will be populated in subsequent patches.

* A reason for this utility is that some conversions from and to names and keys need to be modified, and additional helper methods may be useful,
  and this class can serve as a single place to be responsible for the entire conversion.
* Another reason is that, just like hard-coded values, we would like to move function content out of the `Material` class
  and place it somewhere that can be called from `AbstractMaterial` so that it does not need to be re-implemented in the runtime injected `Material` class version.

License: GPL-3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
Fiddle - https://fiddlemc.org

diff --git a/src/main/java/org/fiddlemc/fiddle/material/MaterialNameAndKeyConversion.java b/src/main/java/org/fiddlemc/fiddle/material/MaterialNameAndKeyConversion.java
new file mode 100644
index 0000000000000000000000000000000000000000..472e6f94da1726e4fde1eda4035dd91a50453f7d
--- /dev/null
+++ b/src/main/java/org/fiddlemc/fiddle/material/MaterialNameAndKeyConversion.java
@@ -0,0 +1,24 @@
+// Fiddle start - modifiable Bukkit enums - Material - remove hard-coded properties - name and key conversion
+
+package org.fiddlemc.fiddle.material;
+
+import org.bukkit.Material;
+
+/**
+ * Do not use for any reason.
+ * This class is for internal purposes only.
+ * <p>
+ *     This class provides a number of implementations for the conversion of names and keys
+ *     from and to {@link Material} instances.
+ * </p>
+ *
+ * @apiNote Internal Use Only
+ */
+@org.jetbrains.annotations.ApiStatus.Internal
+public final class MaterialNameAndKeyConversion {
+
+    private MaterialNameAndKeyConversion() {
+        throw new RuntimeException();
+    }
+
+}
