From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Thu, 25 Jan 2024 21:10:14 +0100
Subject: [PATCH] Read packs - Content - Definitions with parent - Abstract
 JSON parser

Adds the abstract `FiddleContentDefinitionWithParentParser` class, that is a base for parsers that parse JSON into `FiddleContentDefinitionWithParent` instances.

License: GPL-3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
Fiddle - https://fiddlemc.org

diff --git a/src/main/java/org/fiddlemc/fiddle/pack/read/fiddlecontent/definition/withparent/FiddleContentDefinitionWithParentParser.java b/src/main/java/org/fiddlemc/fiddle/pack/read/fiddlecontent/definition/withparent/FiddleContentDefinitionWithParentParser.java
new file mode 100644
index 0000000000000000000000000000000000000000..45454b36c5cdd3a341fd8c9ece025ae65d64516a
--- /dev/null
+++ b/src/main/java/org/fiddlemc/fiddle/pack/read/fiddlecontent/definition/withparent/FiddleContentDefinitionWithParentParser.java
@@ -0,0 +1,63 @@
+// Fiddle - read packs - content definitions with parent - JSON parser
+
+package org.fiddlemc.fiddle.pack.read.fiddlecontent.definition.withparent;
+
+import net.minecraft.resources.ResourceLocation;
+import org.fiddlemc.fiddle.pack.exception.PackException;
+import org.fiddlemc.fiddle.pack.read.fiddlecontent.definition.FiddleContentDefinitionParser;
+import org.fiddlemc.fiddle.pack.read.namedjson.NamedJsonElement;
+import org.fiddlemc.fiddle.pack.read.namedjson.NamedJsonObject;
+import org.jetbrains.annotations.Nullable;
+
+public abstract class FiddleContentDefinitionWithParentParser<T extends FiddleContentDefinitionWithParent>
+    implements FiddleContentDefinitionParser<T> {
+
+    public static final String parentJsonKey = "parent";
+
+    protected FiddleContentDefinitionWithParentParser() {
+    }
+
+    protected abstract FiddleContentDefinitionBase[] getBases();
+
+    protected abstract T parse(
+        ResourceLocation resourceLocation,
+        NamedJsonObject definitionJson,
+        FiddleContentDefinitionParent parent
+    ) throws PackException;
+
+    protected FiddleContentDefinitionParent createKeyParent(ResourceLocation resourceLocation) {
+        return new FiddleContentDefinitionKeyParent<>(resourceLocation);
+    }
+
+    public @Nullable FiddleContentDefinitionBase getBaseByTypedResourceLocation(ResourceLocation resourceLocation) {
+        for (var base : this.getBases()) {
+            if (base.typedResourceLocation.equals(resourceLocation)) {
+                return base;
+            }
+        }
+        return null;
+    }
+
+    private FiddleContentDefinitionParent getParentByTypedResourceLocation(ResourceLocation resourceLocation) {
+        var base = this.getBaseByTypedResourceLocation(resourceLocation);
+        if (base != null) {
+            return base;
+        }
+        return this.createKeyParent(resourceLocation);
+    }
+
+    @Override
+    public final T parse(
+        ResourceLocation resourceLocation,
+        NamedJsonObject definitionJson
+    ) throws PackException {
+        // Parse the parent
+        var parentString = definitionJson.getAsString(parentJsonKey, true, NamedJsonElement.BlankStringParseResult.THROW_EXCEPTION, null);
+        var parentResourceLocation = new ResourceLocation(parentString);
+        var parent = this.getParentByTypedResourceLocation(parentResourceLocation);
+
+        // Parse the rest
+        return this.parse(resourceLocation, definitionJson, parent);
+    }
+
+}
