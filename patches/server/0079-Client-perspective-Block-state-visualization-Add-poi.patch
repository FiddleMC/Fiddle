From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Sat, 29 Jul 2023 16:31:37 +0200
Subject: [PATCH] Client perspective - Block state visualization - Add pointcut
 for anti x-ray finish

Creates a ClientboundLevelChunkWithLightPacket#onFinishApplyAntiXray() that is invoked
when the application of anti x-ray (or the skipping thereof) has finished.
Before this, ClientboundLevelChunkWithLightPacket#setReady(true) was called directly
(which has now been moved to #onFinishApplyAntiXray).
This provides the necessary pointcut to perform additional actions between the finishing of anti x-ray
and the marking of the packet as ready (specifically for the goal of being able to perform
additional block replacements in between), while preventing the need to add a call for these
same actions at the various points of code where anti x-ray may finish.

License: Fiddle Public License Agreement 1.0 (included in license/FPL-1.0.txt)
Fiddle - https://fiddlemc.org

diff --git a/src/main/java/com/destroystokyo/paper/antixray/ChunkPacketBlockController.java b/src/main/java/com/destroystokyo/paper/antixray/ChunkPacketBlockController.java
index b4b0e7917514aeb51c4784f582ecfb858e46a2f0..928d880d4d413a45bb911b823c6fc6574aa4ad18 100644
--- a/src/main/java/com/destroystokyo/paper/antixray/ChunkPacketBlockController.java
+++ b/src/main/java/com/destroystokyo/paper/antixray/ChunkPacketBlockController.java
@@ -32,7 +32,7 @@ public class ChunkPacketBlockController {
     }
 
     public void applyAntiXray(ClientboundLevelChunkWithLightPacket chunkPacket, ChunkPacketInfoAntiXray chunkPacketInfo) { // Fiddle - client perspective - block state visualization - every ChunkPacketInfo is ChunkPacketInfoAntiXray
-        chunkPacket.setReady(true);
+        chunkPacket.onFinishApplyAntiXray(); // Fiddle - client perspective - block state visualization - add pointcut for anti x-ray finish
     }
 
     public void onBlockChange(Level level, BlockPos blockPos, BlockState newBlockState, BlockState oldBlockState, int flags, int maxUpdateDepth) {
diff --git a/src/main/java/com/destroystokyo/paper/antixray/ChunkPacketBlockControllerAntiXray.java b/src/main/java/com/destroystokyo/paper/antixray/ChunkPacketBlockControllerAntiXray.java
index 3243d5c0d1d8a4d8abe4dfd2b8e2d79b12977f4f..86688cae00ba8d4d40cecec3637600874205c793 100644
--- a/src/main/java/com/destroystokyo/paper/antixray/ChunkPacketBlockControllerAntiXray.java
+++ b/src/main/java/com/destroystokyo/paper/antixray/ChunkPacketBlockControllerAntiXray.java
@@ -179,7 +179,7 @@ public final class ChunkPacketBlockControllerAntiXray extends ChunkPacketBlockCo
     public void applyAntiXray(ClientboundLevelChunkWithLightPacket chunkPacket, ChunkPacketInfoAntiXray chunkPacketInfo) {
         if (chunkPacketInfo == null) {
             // Fiddle end - client perspective - block state visualization - every ChunkPacketInfo is ChunkPacketInfoAntiXray
-            chunkPacket.setReady(true);
+            chunkPacket.onFinishApplyAntiXray(); // Fiddle - client perspective - block state visualization - add pointcut for anti x-ray finish
             return;
         }
 
@@ -379,7 +379,7 @@ public final class ChunkPacketBlockControllerAntiXray extends ChunkPacketBlockCo
             }
         }
 
-        chunkPacketInfoAntiXray.getChunkPacket().setReady(true);
+        chunkPacketInfoAntiXray.getChunkPacket().onFinishApplyAntiXray(); // Fiddle - client perspective - block state visualization - add pointcut for anti x-ray finish
     }
 
     private void obfuscateLayer(int y, BitStorageReader bitStorageReader, BitStorageWriter bitStorageWriter, boolean[] solid, boolean[] obfuscate, int[] presetBlockStateBits, boolean[][] current, boolean[][] next, boolean[][] nextNext, LevelChunkSection[] nearbyChunkSections, IntSupplier random) {
diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket.java
index 5b5b00beea78bcc27666373cb60bbd42e985dc5a..405fbbc2ff52ee4a26b95f49728d7abbba56ffa9 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket.java
@@ -28,11 +28,17 @@ public class ClientboundLevelChunkWithLightPacket implements Packet<ClientGamePa
         return this.ready;
     }
 
-    public void setReady(boolean ready) {
+    private void setReady(boolean ready) { // Fiddle - client perspective - block state visualization - add pointcut for anti x-ray finish - public -> private
         this.ready = ready;
     }
     // Paper end
 
+    // Fiddle start - client perspective - block state visualization - add pointcut for anti x-ray finish
+    public void onFinishApplyAntiXray() {
+        this.setReady(true);
+    }
+    // Fiddle end - client perspective - block state visualization - add pointcut for anti x-ray finish
+
     // Paper start - Anti-Xray - Add chunk packet info
     // Fiddle start - client perspective - block state visualization - chunk packets are for a specific client
     public ClientboundLevelChunkWithLightPacket(LevelChunk chunk, LevelLightEngine lightProvider, @Nullable BitSet skyBits, @Nullable BitSet blockBits, ServerPlayer player, boolean applyAntiXray) {
