From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Wed, 12 Jul 2023 21:35:48 +0200
Subject: [PATCH] Modifiable Bukkit enums - Remove hard-coded properties -
 Material - Is transparent

Implements the abstract method defined in `UnsafeValues`
in the "Modifiable Bukkit enums - Remove hard-coded properties - Material - Is transparent" patch in the `fiddle-api` module,
in `CraftMagicNumbers`.

The property values are also cached after being computed, for performant access.

Also adds a test based on the original backing implementation.

License: GPL-3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
Fiddle - https://fiddlemc.org

diff --git a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
index 3c63595ae4673b6f25532eb02f11a2620793082a..d22559aedc211a32eab90837763dc9e0fe0506e3 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
@@ -856,6 +856,150 @@ public final class CraftMagicNumbers implements UnsafeValues {
         return this.isAirCache.get(material);
     }
 
+    // Fiddle start - modifiable Bukkit enums - Material - remove hard-coded properties - is transparent
+    @Override
+    public boolean isTransparent(Material material) {
+        // Based on the original org.bukkit.Material#isTransparent()
+        if (!material.isBlock()) {
+            return false;
+        }
+        switch (CraftLegacy.fromLegacy(material, false)) {
+            //<editor-fold defaultstate="collapsed" desc="isTransparent">
+            case ACACIA_BUTTON:
+            case ACACIA_SAPLING:
+            case ACTIVATOR_RAIL:
+            case AIR:
+            case ALLIUM:
+            case ATTACHED_MELON_STEM:
+            case ATTACHED_PUMPKIN_STEM:
+            case AZURE_BLUET:
+            case BARRIER:
+            case BEETROOTS:
+            case BIRCH_BUTTON:
+            case BIRCH_SAPLING:
+            case BLACK_CARPET:
+            case BLUE_CARPET:
+            case BLUE_ORCHID:
+            case BROWN_CARPET:
+            case BROWN_MUSHROOM:
+            case CARROTS:
+            case CAVE_AIR:
+            case CHORUS_FLOWER:
+            case CHORUS_PLANT:
+            case COCOA:
+            case COMPARATOR:
+            case CREEPER_HEAD:
+            case CREEPER_WALL_HEAD:
+            case CYAN_CARPET:
+            case DANDELION:
+            case DARK_OAK_BUTTON:
+            case DARK_OAK_SAPLING:
+            case DEAD_BUSH:
+            case DETECTOR_RAIL:
+            case DRAGON_HEAD:
+            case DRAGON_WALL_HEAD:
+            case END_GATEWAY:
+            case END_PORTAL:
+            case END_ROD:
+            case FERN:
+            case FIRE:
+            case FLOWER_POT:
+            case GRASS:
+            case GRAY_CARPET:
+            case GREEN_CARPET:
+            case JUNGLE_BUTTON:
+            case JUNGLE_SAPLING:
+            case LADDER:
+            case LARGE_FERN:
+            case LEVER:
+            case LIGHT_BLUE_CARPET:
+            case LIGHT_GRAY_CARPET:
+            case LILAC:
+            case LILY_PAD:
+            case LIME_CARPET:
+            case MAGENTA_CARPET:
+            case MELON_STEM:
+            case NETHER_PORTAL:
+            case NETHER_WART:
+            case OAK_BUTTON:
+            case OAK_SAPLING:
+            case ORANGE_CARPET:
+            case ORANGE_TULIP:
+            case OXEYE_DAISY:
+            case PEONY:
+            case PINK_CARPET:
+            case PINK_TULIP:
+            case PLAYER_HEAD:
+            case PLAYER_WALL_HEAD:
+            case POPPY:
+            case POTATOES:
+            case POTTED_ACACIA_SAPLING:
+            case POTTED_ALLIUM:
+            case POTTED_AZALEA_BUSH:
+            case POTTED_AZURE_BLUET:
+            case POTTED_BIRCH_SAPLING:
+            case POTTED_BLUE_ORCHID:
+            case POTTED_BROWN_MUSHROOM:
+            case POTTED_CACTUS:
+            case POTTED_DANDELION:
+            case POTTED_DARK_OAK_SAPLING:
+            case POTTED_DEAD_BUSH:
+            case POTTED_FERN:
+            case POTTED_FLOWERING_AZALEA_BUSH:
+            case POTTED_JUNGLE_SAPLING:
+            case POTTED_OAK_SAPLING:
+            case POTTED_ORANGE_TULIP:
+            case POTTED_OXEYE_DAISY:
+            case POTTED_PINK_TULIP:
+            case POTTED_POPPY:
+            case POTTED_RED_MUSHROOM:
+            case POTTED_RED_TULIP:
+            case POTTED_SPRUCE_SAPLING:
+            case POTTED_WHITE_TULIP:
+            case POWERED_RAIL:
+            case PUMPKIN_STEM:
+            case PURPLE_CARPET:
+            case RAIL:
+            case REDSTONE_TORCH:
+            case REDSTONE_WALL_TORCH:
+            case REDSTONE_WIRE:
+            case RED_CARPET:
+            case RED_MUSHROOM:
+            case RED_TULIP:
+            case REPEATER:
+            case ROSE_BUSH:
+            case SKELETON_SKULL:
+            case SKELETON_WALL_SKULL:
+            case SNOW:
+            case SPRUCE_BUTTON:
+            case SPRUCE_SAPLING:
+            case STONE_BUTTON:
+            case STRUCTURE_VOID:
+            case SUGAR_CANE:
+            case SUNFLOWER:
+            case TALL_GRASS:
+            case TORCH:
+            case TRIPWIRE:
+            case TRIPWIRE_HOOK:
+            case VINE:
+            case VOID_AIR:
+            case WALL_TORCH:
+            case WHEAT:
+            case WHITE_CARPET:
+            case WHITE_TULIP:
+            case WITHER_SKELETON_SKULL:
+            case WITHER_SKELETON_WALL_SKULL:
+            case YELLOW_CARPET:
+            case ZOMBIE_HEAD:
+            case ZOMBIE_WALL_HEAD:
+                //</editor-fold>
+                return true;
+            default:
+                return false;
+        }
+    }
+    // Fiddle end - modifiable Bukkit enums - Material - remove hard-coded properties - is transparent
+
     @Override
     public boolean isFlammable(Material material) {
         return this.isFlammableCache.get(material);
diff --git a/src/test/java/org/fiddlemc/fiddle/material/legacy/PerLegacyMaterialTest.java b/src/test/java/org/fiddlemc/fiddle/material/legacy/PerLegacyMaterialTest.java
index 6e983a44d7f014483722321714b9e049156b141c..468f1ef483294c7ec7b1712dc8f88865ea9e5874 100644
--- a/src/test/java/org/fiddlemc/fiddle/material/legacy/PerLegacyMaterialTest.java
+++ b/src/test/java/org/fiddlemc/fiddle/material/legacy/PerLegacyMaterialTest.java
@@ -96,6 +96,15 @@ public class PerLegacyMaterialTest extends AbstractTestingBase {
         }
     }
 
+    // Fiddle start - modifiable Bukkit enums - Material - remove hard-coded properties - is transparent
+    @Test
+    public void isTransparent() {
+        for (Material material : getMaterials()) {
+            assertEquals("isTransparent equals legacy isTransparent for " + material, material.isTransparentLegacy(), material.isTransparent());
+        }
+    }
+    // Fiddle end - modifiable Bukkit enums - Material - remove hard-coded properties - is transparent
+
     @Test
     public void isFlammable() {
         for (Material material : getMaterials()) {
