From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Sun, 4 Jun 2023 11:32:13 +0200
Subject: [PATCH] Modify Bukkit enums - Remove hard-coded values - max stack
 size, durability

License: GPL-3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
Fiddle - https://fiddlemc.org

diff --git a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
index b5a161f9ec47ce379f2bab70c67cca6b96879d77..b09dc3dae20bce22c78bfdbc23ff2885f61ff375 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
@@ -654,6 +654,31 @@ public final class CraftMagicNumbers implements UnsafeValues {
         public static final int TAG_ANY_NUMBER = 99;
     }
 
+    // Fiddle start - remove hard-coded Bukkit values - Material - max stack size
+    @Override
+    public int getMaxStackSize(Material material) {
+        if (!material.isItem()) {
+            return Item.MAX_STACK_SIZE;
+        }
+        // Based on org.bukkit.PerMaterialTest#maxStackSize
+        if (material == Material.AIR || material == Material.LEGACY_AIR) {
+            return 0;
+        }
+        return getItem(material).getMaxStackSize();
+    }
+    // Fiddle end - remove hard-coded Bukkit values - Material - max stack sizez
+
+    // Fiddle start - remove hard-coded Bukkit values - Material - durability
+    @Override
+    public short getMaxDurability(Material material) {
+        // Based on org.bukkit.PerMaterialTest#testDurability
+        if (!material.isBlock()) {
+            return (short) getItem(material).getMaxDamage();
+        }
+        return (short) 0;
+    }
+    // Fiddle end - remove hard-coded Bukkit values - Material - durability
+
     // Fiddle start - remove hard-coded Bukkit values - Material - is block
     @Override
     public boolean isBlock(Material material) {
