From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Sat, 30 Dec 2023 21:37:02 +0100
Subject: [PATCH] Client perspective - Block state visualization - Apply to
 chunk packets - Do not multicast chunk packets for anti-x-ray

Removes the mechanism by which constructed `ClientboundLevelChunkWithLightPacket` instances may be sent to multiple targets, if they all must or all must not have anti-x-ray applied.

License: GPL-3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
Fiddle - https://fiddlemc.org

diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index 8581db6a05247b69f826d7d834fc74db2456c0b2..8d6f7d35dc74add1f6f5089752b7cb2c6a5f978c 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -523,14 +523,14 @@ public class CraftWorld extends CraftRegionAccessor implements World {
                 if (playersInRange.isEmpty()) return true; // Paper - rewrite player chunk loader
 
                 // Paper start - Anti-Xray - Bypass
-                Map<Object, ClientboundLevelChunkWithLightPacket> refreshPackets = new HashMap<>();
                 for (ServerPlayer player : playersInRange) {
                     if (player.connection == null) continue;
 
-                    Boolean shouldModify = chunk.getLevel().chunkPacketBlockController.shouldModify(player, chunk);
-                    player.connection.send(refreshPackets.computeIfAbsent(shouldModify, s -> { // Use connection to prevent creating firing event
-                        return new ClientboundLevelChunkWithLightPacket(chunk, this.world.getLightEngine(), null, null, (Boolean) s);
-                    }));
+                    // Fiddle start - client perspective - block state visualization - apply to chunk packets - do not cache for anti-x-ray
+                    boolean shouldModify = chunk.getLevel().chunkPacketBlockController.shouldModify(player, chunk);
+                    var packet = new ClientboundLevelChunkWithLightPacket(chunk, this.world.getLightEngine(), null, null, shouldModify);
+                    player.connection.send(packet); // Use connection to prevent creating firing event
+                    // Fiddle end - client perspective - block state visualization - apply to chunk packets - do not cache for anti-x-ray
                     // Paper end
                 }
         // Paper - rewrite player chunk loader
