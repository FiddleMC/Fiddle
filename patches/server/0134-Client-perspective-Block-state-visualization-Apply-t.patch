From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Fri, 5 Jan 2024 20:01:17 +0100
Subject: [PATCH] Client perspective - Block state visualization - Apply to
 chunk packets - Store ChunkPacketInfo and chunk details

Store the following values in the `ClientboundLevelChunkWithLightPacket` when they are passed to the constructor:
* `ChunkPacketInfo`
* `Chunk.getSectionsCount()`
* `Chunk.getPos()`
* `Chunk.getLevel()`

These are used in the "Client perspective - Block state visualization - Apply to chunk packets - Call setup for all blocks in chunk packet" patch.

License: GPL-3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
Fiddle - https://fiddlemc.org

diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket.java
index 48b1508bb3fcff8b3dbd24ea3fda11d534270c0e..303fe6a1feb15e86e879d568becaee3d6b4cd9e6 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket.java
@@ -13,6 +13,12 @@ public class ClientboundLevelChunkWithLightPacket extends org.fiddlemc.fiddle.pa
     private final int z;
     private final ClientboundLevelChunkPacketData chunkData;
     private final ClientboundLightUpdatePacketData lightData;
+    // Fiddle start - block state visualization - apply to chunk packets - store ChunkPacketInfo and chunk details
+    public @Nullable com.destroystokyo.paper.antixray.ChunkPacketInfoAntiXray chunkPacketInfo;
+    public int sectionsCount;
+    public @Nullable ChunkPos chunkPos;
+    public @Nullable net.minecraft.server.level.ServerLevel level;
+    // Fiddle end - block state visualization - apply to chunk packets - store ChunkPacketInfo and chunk details
     // Paper start - Async-Anti-Xray - Ready flag for the connection
     private volatile boolean ready;
 
@@ -36,6 +42,12 @@ public class ClientboundLevelChunkWithLightPacket extends org.fiddlemc.fiddle.pa
         // Fiddle start - client perspective - block state visualization - apply to chunk packets - every ChunkPacketInfo is ChunkPacketInfoAntiXray
         boolean isChunkPacketInfoNeeded = modifyBlocks;
         var chunkPacketInfo = isChunkPacketInfoNeeded ? chunk.getLevel().chunkPacketBlockController.getChunkPacketInfo(this, chunk, modifyBlocks) : null; // No effective changes to this field except the type is inferred
+        // Fiddle start - block state visualization - apply to chunk packets - store ChunkPacketInfo and chunk details
+        this.chunkPacketInfo = chunkPacketInfo;
+        this.sectionsCount = chunk.getSectionsCount();
+        this.chunkPos = chunk.getPos();
+        this.level = (net.minecraft.server.level.ServerLevel) chunk.getLevel();
+        // Fiddle end - block state visualization - apply to chunk packets - store ChunkPacketInfo and chunk details
         // Fiddle end - client perspective - block state visualization - apply to chunk packets - every ChunkPacketInfo is ChunkPacketInfoAntiXray
         this.chunkData = new ClientboundLevelChunkPacketData(this, chunk, chunkPacketInfo); // Fiddle - client perspective - block state visualization - apply to chunk packets - ClientboundLevelChunkPacketData has a reference to its ClientboundLevelChunkWithLightPacket
         // Paper end
