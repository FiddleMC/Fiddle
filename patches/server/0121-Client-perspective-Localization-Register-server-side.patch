From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Sun, 23 Jul 2023 18:25:11 +0200
Subject: [PATCH] Client perspective - Localization - Register server-side
 translations

License: GPL-3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
Fiddle - https://fiddlemc.org

diff --git a/src/main/java/net/minecraft/server/Main.java b/src/main/java/net/minecraft/server/Main.java
index a9d5baad5cb88db38dde58316410d8b243c983b6..157dec0857b316057dcfee617c961f350190d5fa 100644
--- a/src/main/java/net/minecraft/server/Main.java
+++ b/src/main/java/net/minecraft/server/Main.java
@@ -228,6 +228,18 @@ public class Main {
             }
             // Fiddle end - client perspective - block state visualization - determine and store desired setuppers
 
+            // Fiddle start - client perspective - localization - register server-side translations
+            // TODO this is not read from the resource packs yet
+            for (var block : net.minecraft.core.registries.BuiltInRegistries.BLOCK) {
+                if (!block.isVanilla()) {
+                    org.fiddlemc.fiddle.packet.locale.ServerSideTranslations.registerAddedTranslation("en_us", block.getDescriptionId(), "Fiddle " + block.getKeyInBlockRegistry().getPath());
+                    org.fiddlemc.fiddle.packet.locale.ServerSideTranslations.registerAddedTranslation("en_gb", block.getDescriptionId(), "Fiddle " + block.getKeyInBlockRegistry().getPath() + ", I say");
+                    org.fiddlemc.fiddle.packet.locale.ServerSideTranslations.registerAddedTranslation("zh_cn", block.getDescriptionId(), "小提琴 " + block.getKeyInBlockRegistry().getPath());
+                }
+            }
+            org.fiddlemc.fiddle.packet.locale.ServerSideTranslations.registerVanillaTranslationReplacement("en_us", "block.minecraft.bookshelf", "Oak Bookshelf");
+            // Fiddle end - client perspective - localization - register server-side translations
+
             // Fiddle start - modifiable Bukkit enums - inject runtime versions - common utilities
             ClassLoader systemClassLoader = ClassLoader.getSystemClassLoader();
             class InjectRuntimeClassVersionHelper {
