From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Mon, 10 Jul 2023 22:05:08 +0200
Subject: [PATCH] Material fixes - Add missing values to hasGravity

Fixes the unit test for `Material.hasGravity`, as it was missing support for some falling blocks:
* Blocks that were an instance of `FallingBlock` but not `Fallable`
* Blocks that were an instance of `ScaffoldingBlock`

This makes the unit test work for the missing `Material` values added in the "Material fixes - Add missing values to hasGravity" patch in the `fiddle-api` module.

License: GPL-3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
Fiddle - https://fiddlemc.org

diff --git a/src/test/java/org/bukkit/PerMaterialTest.java b/src/test/java/org/bukkit/PerMaterialTest.java
index 7044d19e67e1514ff9685e12667c22a057b64df9..6715f63ea2fdc37ecf93a4f5a25357e7900e9afc 100644
--- a/src/test/java/org/bukkit/PerMaterialTest.java
+++ b/src/test/java/org/bukkit/PerMaterialTest.java
@@ -171,7 +171,10 @@ public class PerMaterialTest extends AbstractTestingBase {
     @Test
     public void hasGravity() {
         if (this.material.isBlock()) {
-            assertThat(this.material.hasGravity(), is(CraftMagicNumbers.getBlock(material) instanceof FallingBlock));
+            // Fiddle start - add missing Material values with gravity
+            var block = CraftMagicNumbers.getBlock(material);
+            assertThat(this.material.hasGravity(), is(block instanceof net.minecraft.world.level.block.Fallable || block instanceof net.minecraft.world.level.block.ScaffoldingBlock));
+            // Fiddle end - add missing Material values with gravity
         } else {
             assertFalse(this.material.hasGravity());
         }
