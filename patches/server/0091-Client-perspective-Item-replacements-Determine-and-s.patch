From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Sun, 23 Jul 2023 12:05:40 +0200
Subject: [PATCH] Client perspective - Item replacements - Determine and store
 desired visual handles

License: Fiddle Public License Agreement 1.0 (included in license/FPL-1.0.txt)
Fiddle - https://fiddlemc.org

diff --git a/src/main/java/net/minecraft/server/Main.java b/src/main/java/net/minecraft/server/Main.java
index e40e392cbe91fbf58b4068c8f94600de83ec114c..7b58c0218f8dbb46d0969cafa9b005f7f7922bd0 100644
--- a/src/main/java/net/minecraft/server/Main.java
+++ b/src/main/java/net/minecraft/server/Main.java
@@ -55,6 +55,7 @@ import net.minecraft.util.profiling.jfr.Environment;
 import net.minecraft.util.profiling.jfr.JvmProfiler;
 import net.minecraft.util.worldupdate.WorldUpgrader;
 import net.minecraft.world.flag.FeatureFlags;
+import net.minecraft.world.item.Items;
 import net.minecraft.world.level.GameRules;
 import net.minecraft.world.level.LevelSettings;
 import net.minecraft.world.level.WorldDataConfiguration;
@@ -71,6 +72,7 @@ import net.minecraft.world.level.storage.WorldData;
 import org.bukkit.Material;
 import org.fiddlemc.fiddle.packet.ClientPerspectiveCategory;
 import org.fiddlemc.fiddle.packet.block.OnePerCategoryBlockStateVisualizationSetupProvider;
+import org.fiddlemc.fiddle.packet.item.VanillaItemOverrideVisualHandle;
 import org.fiddlemc.fiddle.packet.locale.ServerSideTranslations;
 import org.fiddlemc.fiddle.server.FiddleFeatureSupport;
 import org.fiddlemc.fiddle.configuration.FiddleConfigurations;
@@ -258,6 +260,15 @@ public class Main {
             }
             // Fiddle end - client perspective - block state visualization - determine and store visualizations
 
+            // Fiddle start - client perspective - item replacements - determine and store desired visual handles
+            // TODO This doesn't do anything interesting yet: should be replaced with an actual mechanism that bases this on the resource pack assets
+            for (var item : BuiltInRegistries.ITEM) {
+                if (item.isAddedByFiddle()) {
+                    item.visualHandleOrProvider = new VanillaItemOverrideVisualHandle(Items.STONE, 0);
+                }
+            }
+            // Fiddle end - client perspective - item replacements - determine and store desired visual handles
+
             // Fiddle start - modifiable Bukkit enums - inject runtime versions - common utilities
             ClassLoader systemClassLoader = ClassLoader.getSystemClassLoader();
             class InjectRuntimeClassVersionHelper {
