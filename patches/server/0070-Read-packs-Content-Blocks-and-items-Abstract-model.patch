From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Thu, 25 Jan 2024 20:37:57 +0100
Subject: [PATCH] Read packs - Content - Blocks and items - Abstract model

Adds an abstract class `BlockOrItemDefinition`, that contains some common implementation for `BlockDefinition` and `ItemDefinition` added respectively in the
"Read packs - Content - Blocks - Model" and "Read packs - Content - Items - Model" patches. Also adds models of their properties.
Also adds an abstract class `BlockOrItemDefinitionBase` for base parents of block and item definitions.

An abstract JSON parser for these definitions is added in the "Read packs - Content - Blocks and items - Abstract JSON parser" patch,
and the resulting definition instances can be then be loaded by corresponding loading procedures, for which an abstract basis is added in the "Load packs - Content - Blocks and items - Register - Abstract implementation" patch.

License: GPL-3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
Fiddle - https://fiddlemc.org

diff --git a/src/main/java/org/fiddlemc/fiddle/pack/read/fiddlecontent/definition/blockoritem/BlockOrItemDefinition.java b/src/main/java/org/fiddlemc/fiddle/pack/read/fiddlecontent/definition/blockoritem/BlockOrItemDefinition.java
new file mode 100644
index 0000000000000000000000000000000000000000..495372132ee69fc8861b049dfa3cbe26509fa167
--- /dev/null
+++ b/src/main/java/org/fiddlemc/fiddle/pack/read/fiddlecontent/definition/blockoritem/BlockOrItemDefinition.java
@@ -0,0 +1,32 @@
+// Fiddle - read packs - blocks and items - model
+
+package org.fiddlemc.fiddle.pack.read.fiddlecontent.definition.blockoritem;
+
+import net.minecraft.resources.ResourceLocation;
+import org.fiddlemc.fiddle.pack.read.fiddlecontent.definition.FiddleContentDefinitionType;
+import org.fiddlemc.fiddle.pack.read.fiddlecontent.definition.withparent.FiddleContentDefinitionKeyParent;
+import org.fiddlemc.fiddle.pack.read.fiddlecontent.definition.withparent.FiddleContentDefinitionParent;
+import org.fiddlemc.fiddle.pack.read.fiddlecontent.definition.withparent.FiddleContentDefinitionWithParent;
+
+import java.util.ArrayList;
+
+public class BlockOrItemDefinition<PropertiesDefinition extends BlockOrItemPropertiesDefinition>
+    extends FiddleContentDefinitionWithParent {
+
+    public final PropertiesDefinition propertiesDefinition;
+
+    protected BlockOrItemDefinition(FiddleContentDefinitionType<? extends BlockOrItemDefinition<PropertiesDefinition>> type, ResourceLocation untypedResourceLocation, FiddleContentDefinitionParent parent, PropertiesDefinition propertiesDefinition) {
+        super(type, untypedResourceLocation, parent);
+        this.propertiesDefinition = propertiesDefinition;
+    }
+
+    @Override
+    public ArrayList<ResourceLocation> buildReferencedResourceLocations() {
+        var references = super.buildReferencedResourceLocations();
+        if (this.propertiesDefinition.parent instanceof FiddleContentDefinitionKeyParent<?> keyParent) {
+            references.add(keyParent.resourceLocation);
+        }
+        return references;
+    }
+
+}
diff --git a/src/main/java/org/fiddlemc/fiddle/pack/read/fiddlecontent/definition/blockoritem/BlockOrItemDefinitionBase.java b/src/main/java/org/fiddlemc/fiddle/pack/read/fiddlecontent/definition/blockoritem/BlockOrItemDefinitionBase.java
new file mode 100644
index 0000000000000000000000000000000000000000..f844dce10a27c7b205d42b54fd0f4211ec70919c
--- /dev/null
+++ b/src/main/java/org/fiddlemc/fiddle/pack/read/fiddlecontent/definition/blockoritem/BlockOrItemDefinitionBase.java
@@ -0,0 +1,21 @@
+// Fiddle - read packs - blocks and items - model
+
+package org.fiddlemc.fiddle.pack.read.fiddlecontent.definition.blockoritem;
+
+import net.minecraft.resources.ResourceLocation;
+import org.fiddlemc.fiddle.pack.read.fiddlecontent.definition.FiddleContentDefinitionType;
+import org.fiddlemc.fiddle.pack.read.fiddlecontent.definition.withparent.FiddleContentDefinitionBase;
+import org.fiddlemc.fiddle.pack.read.fiddlecontent.definition.withparent.FiddleContentDefinitionParent;
+
+public abstract class BlockOrItemDefinitionBase
+    extends FiddleContentDefinitionBase
+    implements FiddleContentDefinitionParent {
+
+    protected BlockOrItemDefinitionBase(
+        FiddleContentDefinitionType<?> type,
+        ResourceLocation untypedResourceLocation
+    ) {
+        super(type, untypedResourceLocation);
+    }
+
+}
diff --git a/src/main/java/org/fiddlemc/fiddle/pack/read/fiddlecontent/definition/blockoritem/BlockOrItemPropertiesDefinition.java b/src/main/java/org/fiddlemc/fiddle/pack/read/fiddlecontent/definition/blockoritem/BlockOrItemPropertiesDefinition.java
new file mode 100644
index 0000000000000000000000000000000000000000..c1496f3a29558e415dc7410fc9f7b1d1291a5022
--- /dev/null
+++ b/src/main/java/org/fiddlemc/fiddle/pack/read/fiddlecontent/definition/blockoritem/BlockOrItemPropertiesDefinition.java
@@ -0,0 +1,23 @@
+// Fiddle - read packs - blocks and items - model
+
+package org.fiddlemc.fiddle.pack.read.fiddlecontent.definition.blockoritem;
+
+import org.fiddlemc.fiddle.pack.read.fiddlecontent.definition.withparent.FiddleContentDefinitionParent;
+import org.jetbrains.annotations.Nullable;
+
+/**
+ * The definition of properties of an {@link BlockOrItemDefinition}, that can be used to build a properties instance.
+ */
+public class BlockOrItemPropertiesDefinition {
+
+    /**
+     * A parent, similar to {@link BlockOrItemDefinition#parent},
+     * but specifically for the purpose of initializing the properties.
+     */
+    public final @Nullable FiddleContentDefinitionParent parent;
+
+    protected BlockOrItemPropertiesDefinition(@Nullable FiddleContentDefinitionParent parent) {
+        this.parent = parent;
+    }
+
+}
