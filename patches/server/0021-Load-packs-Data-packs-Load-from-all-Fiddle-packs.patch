From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Thu, 11 May 2023 21:35:40 +0200
Subject: [PATCH] Load packs - Data packs - Load from all Fiddle packs

License: GPL-3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
Fiddle - https://fiddlemc.org

diff --git a/src/main/java/org/fiddlemc/fiddle/pack/data/FiddleRepositorySource.java b/src/main/java/org/fiddlemc/fiddle/pack/data/FiddleRepositorySource.java
index f09a43b39b1fb27652a72e418858dd5f36458b53..5c70fc658cad1905e45376ac9125a052e98ffdf8 100644
--- a/src/main/java/org/fiddlemc/fiddle/pack/data/FiddleRepositorySource.java
+++ b/src/main/java/org/fiddlemc/fiddle/pack/data/FiddleRepositorySource.java
@@ -2,8 +2,10 @@
 
 package org.fiddlemc.fiddle.pack.data;
 
+import net.minecraft.server.packs.PackResources;
 import net.minecraft.server.packs.repository.Pack;
 import net.minecraft.server.packs.repository.RepositorySource;
+import org.fiddlemc.fiddle.pack.reader.PackReader;
 import org.jetbrains.annotations.NotNull;
 
 import java.util.function.Consumer;
@@ -15,7 +17,20 @@ public class FiddleRepositorySource implements RepositorySource {
 
     @Override
     public void loadPacks(@NotNull Consumer<Pack> profileAdder) {
-        // TODO load packs
+        for (var packBeingRead : PackReader.getPacksBeingRead()) {
+            // Check that there is a data folder
+            var dataFolder = packBeingRead.getFileByPath("data");
+            if (dataFolder != null && dataFolder.isDirectory) {
+                // Check that the data folder is non-empty (i.e. it contains some actual file)
+                var dataFiles = dataFolder.getSubfiles();
+                if (dataFiles.stream().anyMatch(file -> !file.isDirectory)) {
+                    System.out.println("Pack " + packBeingRead.meta.technicalName + " seems to have data");
+                    return;
+                }
+            }
+            System.out.println("Pack " + packBeingRead.meta.technicalName + " seems to have NO data");
+            return;
+        }
     }
 
 }
