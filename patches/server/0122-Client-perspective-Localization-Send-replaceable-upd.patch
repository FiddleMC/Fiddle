From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Sun, 23 Jul 2023 18:40:48 +0200
Subject: [PATCH] Client perspective - Localization - Send replaceable updates
 after locale change

License: GPL-3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
Fiddle - https://fiddlemc.org

diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 11db6d28df1c60af1744833239915b3c1ad3f502..3de1597e494b5504eff762cbc15d0e32f34abcb7 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -2148,7 +2148,10 @@ public class ServerPlayer extends Player {
             PlayerChangedMainHandEvent event = new PlayerChangedMainHandEvent(this.getBukkitEntity(), this.getMainArm() == HumanoidArm.LEFT ? MainHand.LEFT : MainHand.RIGHT);
             this.server.server.getPluginManager().callEvent(event);
         }
-        if (this.language == null || !this.language.equals(clientOptions.language())) { // Paper
+        // Fiddle start - client perspective - localization - send update packets for replaceables after locale change
+        boolean localeChanged = this.language == null || !this.language.equals(clientOptions.language()); // Paper
+        if (localeChanged) {
+            // Fiddle end - client perspective - localization - send update packets for replaceables after locale change
             PlayerLocaleChangeEvent event = new PlayerLocaleChangeEvent(this.getBukkitEntity(), clientOptions.language());
             this.server.server.getPluginManager().callEvent(event);
             this.server.server.getPluginManager().callEvent(new com.destroystokyo.paper.event.player.PlayerLocaleChangeEvent(this.getBukkitEntity(), this.language, clientOptions.language())); // Paper
@@ -2160,6 +2163,12 @@ public class ServerPlayer extends Player {
     public void updateOptionsNoEvents(ClientInformation clientOptions) {
         // Paper end
         this.language = clientOptions.language();
+        // Fiddle start - client perspective - localization - send update packets for replaceables after locale change
+        boolean localeChanged = this.language == null || !this.language.equals(clientOptions.language()); // Paper
+        if (localeChanged) {
+            this.sendUpdatesForDeepReplaceableContent(true, true);
+        }
+        // Fiddle end - client perspective - localization - send update packets for replaceables after locale change
         this.adventure$locale = java.util.Objects.requireNonNullElse(net.kyori.adventure.translation.Translator.parseLocale(this.language), java.util.Locale.US); // Paper
         this.requestedViewDistance = clientOptions.viewDistance();
         this.chatVisibility = clientOptions.chatVisibility();
