From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Sun, 23 Jul 2023 12:05:40 +0200
Subject: [PATCH] Client perspective - Item replacements - Determine and store
 desired visual handles

License: Fiddle Public License Agreement 1.0 (included in license/FPL-1.0.txt)
Fiddle - https://fiddlemc.org

diff --git a/src/main/java/net/minecraft/server/Main.java b/src/main/java/net/minecraft/server/Main.java
index 30faee5954fc9dc58a8d782b929d508f7f89c4b4..c5f2dfab181474f93aeef3c8538015ef9448e42d 100644
--- a/src/main/java/net/minecraft/server/Main.java
+++ b/src/main/java/net/minecraft/server/Main.java
@@ -60,6 +60,7 @@ import net.minecraft.util.profiling.jfr.Environment;
 import net.minecraft.util.profiling.jfr.JvmProfiler;
 import net.minecraft.util.worldupdate.WorldUpgrader;
 import net.minecraft.world.flag.FeatureFlags;
+import net.minecraft.world.item.Items;
 import net.minecraft.world.level.GameRules;
 import net.minecraft.world.level.LevelSettings;
 import net.minecraft.world.level.WorldDataConfiguration;
@@ -73,6 +74,7 @@ import net.minecraft.world.level.storage.LevelSummary;
 import net.minecraft.world.level.storage.PrimaryLevelData;
 import net.minecraft.world.level.storage.WorldData;
 import org.bukkit.Material;
+import org.fiddlemc.fiddle.packet.ClientPerspectiveCategory;
 import org.fiddlemc.fiddle.packet.locale.ServerSideTranslations;
 import org.fiddlemc.fiddle.configuration.FiddleConfigurations;
 import org.fiddlemc.fiddle.configuration.PermanenceConfirmation;
@@ -247,6 +249,15 @@ public class Main {
             ServerSideTranslations.registerVanillaTranslationReplacement("en_us", "block.minecraft.bookshelf", "Oak Bookshelf");
             // Fiddle end - client perspective - localization - register server-side translations
 
+            // Fiddle start - client perspective - item replacements - determine and store desired visual handles
+            // TODO This doesn't do anything interesting yet: should be replaced with an actual mechanism that bases this on the resource pack assets
+            for (var item : BuiltInRegistries.ITEM) {
+                if (item.isAddedByFiddle()) {
+                    item.visualHandleOrProvider = new org.fiddlemc.fiddle.packet.item.VanillaItemOverrideItemVisualHandle(Items.STONE, 0);
+                }
+            }
+            // Fiddle end - client perspective - item replacements - determine and store desired visual handles
+
             // Fiddle start - modifiable Bukkit enums - inject runtime versions - common utilities
             ClassLoader systemClassLoader = ClassLoader.getSystemClassLoader();
             class InjectRuntimeClassVersionHelper {
